
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "data/",
    "dist",
    "docs/",
    "sandbox/",
    "services/",
    "site-packages",
    "venv",
]
indent-width = 4
line-length = 120
target-version = "py311"

[lint.mccabe]
max-complexity = 5

[lint]
select = ["ALL"]
ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in `__init__`
    "D203",  # 1 blank line required before class docstring *
    "D212",  # Multi-line docstring summary should start at the second line *
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = [
    "ANN001",
    "ANN202",
    "ARG002",
    "INP001",
    "PLR2004",
    "S101",
]

[format]
exclude = ["*.ipynb"]

docstring-code-format = true # Enable auto-formatting of code examples in docstrings.
docstring-code-line-length = "dynamic" # Set the line length limit in docstrings.

indent-style = "space" # Like Black, indent with spaces, rather than tabs.
line-ending = "auto" # Like Black, automatically detect the appropriate line ending.
quote-style = "double" # Like Black, use double quotes for strings.

skip-magic-trailing-comma = false # Like Black, respect magic trailing commas.
